subscription_id = "3810f594-f91b-404a-b6eb-ebf9b9e4f62c"
client_id = "123"
client_name = "mw"
environment = "test"
purpose="<<Purpose>>"
resource_group_name="rg-hub-nonprod-eastus-000"
location = "eastus"
kubernetes_version = "1.23.3"
aks_cluster_name = "cluster-aks-nonprod-eastus-001"
client_secret = "sample-secret"
repository_name = ""
virtual_network_name        = "vnet-hub-nonprod-eastus-000"
virtual_network_address_space = ["172.28.0.0/20"]
subnets = [
    {
        name           = "AzureBastionSubnet"
        address_prefixes = "172.28.0.0/26"
        service_endpoints = ""
    },
    {
        name           = "AzureFirewallSubnet"
        address_prefixes = "172.28.0.64/26"
        service_endpoints = ""
    },
    {
        name           = "snet-apimgmt-nonprod-eastus-000"
        address_prefixes = "172.28.1.0/24"
        service_endpoints = ""
    },
    {
        name           = "snet-mgmtservers-nonprod-eastus-000"
        address_prefixes = "172.28.6.0/24"
        service_endpoints = ""
    },
    {
        name           = "snet-apimgnt-nonprod-eastus-000"
        address_prefixes = "172.28.7.0/24"
        service_endpoints = ""
    },
    {
        name           = "snet-appgateway-nonprod-eastus-000"
        address_prefixes = "172.28.8.0/24"
        service_endpoints = ""
    },
    {
        name           = "snet-azurebastion-nonprod-eastus-000"
        address_prefixes = "172.28.9.0/24"
        service_endpoints = ""
    },
    {
        name           = "snet-azurefirewall-nonprod-eastus-000"
        address_prefixes = "172.28.10.0/24"
        service_endpoints = ""
    }
]

public_ips = [
    {
        pip_name               = "pip-bas-nonprod-eastus-000"
        allocation_method      = "Static"
        sku                    = "Standard"
    },
    {
        pip_name               = "pip-appgw-nonprod-eastus-000"
        allocation_method      = "Static"
        sku                    = "Standard"
    },
    {
        pip_name               = "pip-firewall-nonprod-eastus-000"
        allocation_method      = "Static"
        sku                    = "Standard"
    }
]

bastion_hosts = [
    {
        bastion_host_name = "bas-host-nonprod-eastus-000"
        pip_name          = "pip-bas-nonprod-eastus-000"
        subnet_name       = "AzureBastionSubnet"
        vnet_name         = "vnet-hub-nonprod-eastus-000"
    }
]

user_managed_identity_name = "appgw-identity-nonprod-eastus-000"

app_gateway_name = "appgw-hub-nonprod-eastus-000"

gateway_ip_configuration = {
    name = "appgw-gatewayipconfig-nonprod-eastus-000"
}

sku = {
    name = "WAF_v2"
    tier = "WAF_v2"
    capacity = 1
}

backend_address_pool = [
    {
        name = "appgw-backendapim-nonprod-eastus-000"
        type = "FQDN"
        value = ["assurant-stage.verituityplatform.com"]
    }
]

probe = [
    {
        name = "hprobe-apim-nonprod-eastus-000"
        host = null
        port = null
        protocol = "Https"
        path = "/status-0123456789abcdef"
        interval = 30
        timeout = 30
        unhealthy_threshold = 3
        pick_host_name_from_backend_http_settings = true
        match = {
            body = null
            status_code = ["200-399"]
        }
    }
]

backend_http_settings = [
    {
        name = "apim-httpsettings-nonprod-eastus-000"
        cookie_based_affinity = "Disabled"
        path = ""
        port = 443
        protocol = "Https"
        request_timeout = 60
        pick_host_name_from_backend_address = true
        probe_name = "hprobe-apim-nonprod-eastus-000"
        host_name = ""
    }
]

frontend_ip_configuration = [
    {
        name = "appgw-frontend_ip_config_internal-nonprod-eastus-000"
        private_ip_allocation = "Dynamic"
      
    }
]

frontend_port = {
    port = 80
    name = "appgw-frontend_port_name-nonprod-eastus-000"
}

http_listener = [
    {
        name = "http-listener-nonprod-eastus-000"
        frontend_ip_configuration_name = "appgw-frontend_ip_config_internal-nonprod-eastus-000"
        frontend_port_name = "appgw-frontend_port_name-nonprod-eastus-000"
        host_name = ""
        protocol = "Http"
        ssl_certificate_name = ""
    }    
]

url_path_map = [
  
]

request_routing_rule = [
    {
        name = "apim-rulep-nonprod-eastus-000"
        rule_type = "Basic"
        priority = 1
        http_listener_name = "http-listener-nonprod-eastus-000"
        backend_address_pool_name = "appgw-backendapim-nonprod-eastus-000"
        backend_http_settings_name = "apim-httpsettings-nonprod-eastus-000"
        url_path_map_name = null
    }
]

app_gateway_frontend_ip_config_pip = "pip-appgw-nonprod-eastus-000"
app_gateway_ip_configuration_vnet = "vnet-hub-nonprod-eastus-000"
 app_gateway_ip_configuration_subnet = "snet-appgateway-nonprod-eastus-000"

firewall_policyname = "firewall-policy-nonprod-eastus-000"
firewall_policy_sku = "Premium"

firewall_name = "firewall-hub-nonprod-eastus-000"
fw_ip_config_name = "firewall-ipconfig-nonprod-eastus-000"
fw_ip_config_vnet               = "vnet-hub-nonprod-eastus-000"
fw_ip_config_subnet             = "AzureFirewallSubnet"
fw_ip_config_pip                = "pip-firewall-nonprod-eastus-000"

firewall_sku_name = "AZFW_VNet"
sku_tier = "Premium"

network_peerings = [
    {
        peering_name                    = "vnet-hub-nonprod-eastus-000_to_myVnetS1"
        resource_group_name             = "rg-hub-nonprod-eastus-000"
        vnet_name                       = "vnet-hub-nonprod-eastus-000"
        destination_vnet_id             = "/subscriptions/3810f594-f91b-404a-b6eb-ebf9b9e4f62c/resourceGroups/Assurant-Dev-stndrd/providers/Microsoft.Network/virtualNetworks/myVnetS1"
        allow_virtual_network_access    = true
        allow_forwarded_traffic         = true
        allow_gateway_transit           = false
        use_remote_gateways             = false 
    },
    {
        peering_name                    = "myVnetS1_to_vnet-hub-nonprod-eastus-000"
        resource_group_name             = "Assurant-Dev-stndrd"
        vnet_name                       = "myVnetS0"
        destination_vnet_id             = "/subscriptions/3810f594-f91b-404a-b6eb-ebf9b9e4f62c/resourceGroups/rg-hub-nonprod-eastus-000/providers/Microsoft.Network/virtualNetworks/vnet-hub-nonprod-eastus-000"
        allow_virtual_network_access    = true
        allow_forwarded_traffic         = true
        allow_gateway_transit           = false
        use_remote_gateways             = false
    }

/*resource "azurerm_virtual_network_peering" "example-1" {
  name                      = "peer1to2"
  resource_group_name       = azurerm_resource_group.example.name
  virtual_network_name      = azurerm_virtual_network.example-1.name
  remote_virtual_network_id = azurerm_virtual_network.example-2.id
}

resource "azurerm_virtual_network_peering" "example-2" {
  name                      = "peer2to1"
  resource_group_name       = azurerm_resource_group.example.name
  virtual_network_name      = azurerm_virtual_network.example-2.name
  remote_virtual_network_id = azurerm_virtual_network.example-1.id
}*/
]

route_table_name = "rt-aks-nonprod-eastus-000"
routes = [
    {
        name                   = "rt-aks2firewall-nonprod-eastus-000"
        address_prefix         = "0.0.0.0/0"
        next_hop_type          = "VirtualAppliance"
        next_hop_in_ip_address = "20.232.62.213"
    },
    {
        name                   = "rfc1918-10.0.0.0-aks2firewall-nonprod-eastus-000"
        address_prefix         = "10.0.0.0/8"
        next_hop_type          = "VirtualAppliance"
        next_hop_in_ip_address = "20.232.62.213"
    },
    {
        name                   = "rfc1918-192.168.0.0-aks2firewall-nonprod-eastus-000"
        address_prefix         = "192.168.0.0/16"
        next_hop_type          = "VirtualAppliance"
        next_hop_in_ip_address = "20.232.62.213"
    },
    {
        name                   = "rfc1918-172.16.0.0-aks2firewall-nonprod-eastus-000"
        address_prefix         = "172.16.0.0/12"
        next_hop_type          = "VirtualAppliance"
        next_hop_in_ip_address = "20.232.62.213"
    }
]

firewall_policy_rule_name               = "az-fw-apprule-nonprod-eastus-000"
firewall_policy_rule_priority           = 500
application_rule_collection = [
    {
		name     = "apprule-collection-nonprod-eastus-000"
		priority = 500
		action   = "Allow"
		rule = [
			{
			  name = "apprule-internet-outbound-nonprod-eastus-000"
			  source_addresses  = ["172.28.0.0/20", "11.0.0.0/8","11.0.2.0/24","172.17.0.0/16","20.88.188.118"] 
			  destination_fqdns = ["*"]
			  protocols = [
					{
						type = "Http"
						port = 80
					},
					{
						type = "Https"
						port = 443
					}
				]
			},
			{
			  name = "Anyapp_Pass_rule"
			  source_addresses  = ["*"]
			  destination_fqdns = ["*"]
			  protocols = [
					{
						type = "Http"
						port = 80
					},
					{
						type = "Https"
						port = 443
					}
				]
			}
		]
	}
]

network_rule_collection = [
    {
		name     = "network-rule-collection-nonprod-eastus-000"
		priority = 200
		action   = "Allow"
		rule = [
			{
			  name                  = "network-rule-spoke-outbound-nonprod-eastus-000"
			  protocols             = ["Any"]
			  source_addresses      = ["192.168.0.0/20", "11.0.0.0/8","11.0.2.0/24","172.17.0.0/16","20.88.188.118"]
			  destination_addresses = ["*"]
			  destination_ports     = ["*"]
			},
			{
			  name                  = "network-rule-hub-outbound-nonprod-eastus-000"
			  protocols             = ["Any"]
			  source_addresses      = ["172.28.0.0/20"]
			  destination_addresses = ["*"]
			  destination_ports     = ["*"]
			}
		]
	}
]

nat_rule_collection = [
    {
		name     = "dnat-hub-nonprod-eastus-000"
		priority = 100
		action   = "Dnat"
		rule = [
			{
			  name                = "dntrule80-hub-nonprod-eastus-000"
			  protocols           = ["TCP"]
			  source_addresses    = ["*"]
			  destination_address = "20.232.62.213"
			  destination_ports   = ["80"]
			  translated_address  = "20.88.188.118"
			  translated_port     = "80"
			},
			{
			  name                = "dntrule443-hub-nonprod-eastus-002"
			  protocols           = ["TCP"]
			  source_addresses    = ["*"]
			  destination_address = "20.232.62.213"
			  destination_ports   = ["443"]
			  translated_address  = "20.88.188.118"
			  translated_port     = "443"
			},
			{
			  name                = "dntrulesftp22-hub-nonprod-eastus-003"
			  protocols           = ["TCP","UDP"]
			  source_addresses    = ["*"]
			  destination_address = "20.232.62.213"
			  destination_ports   = ["22"]
			  translated_address  = "20.88.188.118"
			  translated_port     = "22"
			},
			{
			  name                = "dntrule15021-hub-nonprod-eastus-004"
			  protocols           = ["TCP"]
			  source_addresses    = ["*"]
			  destination_address = "20.232.62.213"
			  destination_ports   = ["15021"]
			  translated_address  = "20.88.188.118"
			  translated_port     = "15021"
			},
			{
			  name                = "dntrule31400-hub-nonprod-eastus-005"
			  protocols           = ["TCP"]
			  source_addresses    = ["*"]
			  destination_address = "20.232.62.213"
			  destination_ports   = ["31400"]
			  translated_address  = "20.88.188.118"
			  translated_port     = "31400"
			},
			{
			  name                = "dntrule15443-hub-nonprod-eastus-006"
			  protocols           = ["TCP"]
			  source_addresses    = ["*"]
			  destination_address = "20.232.62.213"
			  destination_ports   = ["15443"]
			  translated_address  = "20.88.188.118"
			  translated_port     = "15443"
			}
		]
	}
]

front_door_name = "afd-nonprod-eastus-000"


routing_rules = [
    {
        name = "rule-afd-nonprod-eastus-assurant-stage-000"
        accepted_protocols = "Http,Https"
        patterns_to_match = "/*"       
        enabled = "true"        
        backend_pool_name ="bp-afd-nonprod-eastus-assurant-stage-000"
        backend_route = "assurant-stage.verituityplatform.com"
        frontend_route = "afdv00-assurant-stage.verituityplatform.com"
    },
     {
        name = "rule-afd-nonprod-eastus-stage-api-000"
        accepted_protocols = "Http,Https"
        patterns_to_match = "/*"       
        enabled = "true"        
        backend_pool_name ="bp-afd-nonprod-eastus-stage-api-000"
        backend_route = "stage-api.verituityplatform.com"
        frontend_route = "afdv00-stage-api.verituityplatform.com"
    }
]


waf_policies = [
    {
        name = "afdwafpolicynonprod001"
        enabled = true
            
    }

]

tags = {}